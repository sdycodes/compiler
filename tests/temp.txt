int prime[30100], used[30100];

int judge(int ary, int i, int n){
	if(ary == -1){
		if(i * i < n){
			return (1);
		}
	}
	return (0);
}

void Sieve(int n)           
{
	int i, multi, index;
	i = 2;
	prime[0] = -1;
	prime[1] = -1;      
	if(i * i < n){
		do{
			multi = 2;
			for (index = i * multi; index <= n; multi=multi+1) {
				prime[index] = -1;
				index = i * multi;
			}
			i=i+1;
			if(judge(prime[i], i, n)){
				do {
					i = i + 1;
				}while(judge(prime[i], i, n));
			}
		}while (i * i < n);
	}
}

int mod(int a, int b){
	int c;
	c = a/b;
	return(a-c*b);
}

void calculate(int num)        
{
	int i;
	i = 2;
	if(num != 1){
	do{
		if (mod(num,i) != 0) {
			do {
				i=i+1;
			} while (prime[i] == -1);
		}
		else {
			num =num / i;
			prime[i] = prime[i] + 1;     
		}
	}while (num != 1) 
	}
}

void print(int n)
{
	int i;
	if (prime[2] != 1) {
		printf("2^", prime[2]);
	}
	else if (prime[2] == 1) {
		printf("2");
	}
	for (i = 3; i <= n; i=i+1) {
		if (prime[i] > 1) {
			printf("*", i);
			printf("^", prime[i]);
		}
		else if (prime[i] == 1) {
			printf("*", i);
		}
	}
}

void main()
{
	int n, i;
	scanf(n);
	if (n == 1) {
		return;
	}
	Sieve(n);

	for (i = n; i >= 2; i=i-1) {
	
		calculate(i);
	}

	print(n);
	return;
}
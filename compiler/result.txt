2 23 this is a const declaration
3 27 this is a const declaration
4 38 this is a const declaration
5 33 this is a const declaration
7 15 this is a variable declaration
8 32 this is a variable declaration
9 16 this is a variable declaration
10 32 this is a variable declaration
11 34 this is a variable declaration
12 12 this is a variable declaration
16 13 this is a return statement
18 3 this is a function definition
19 13 this is a return statement
21 3 this is a function definition
22 13 this is a return statement
24 3 this is a function definition
25 13 this is a return statement
27 3 this is a function definition
28 13 this is a return statement
30 3 this is a function definition
31 13 this is a return statement
33 4 this is a function definition
35 14 this is a return statement
38 14 this is a return statement
40 1 this is an if statement
43 4 this is a function definition
44 7 this is a variable declaration
45 7 this is a assign statement
46 11 this is a printf statement
47 7 this is a assign statement
48 11 this is a printf statement
49 8 this is a assign statement
50 11 this is a printf statement
51 8 this is a assign statement
52 11 this is a printf statement
53 9 this is a assign statement
54 11 this is a printf statement
55 9 this is a assign statement
56 11 this is a printf statement
57 106 this is a printf statement
58 8 this is a return statement
60 3 this is a function definition
62 12 this is a return statement
63 3 this is an if statement
64 12 this is a return statement
65 7 this is an if statement
65 27 this is a return statement
68 4 this is a function definition
69 7 this is a variable declaration
70 7 this is a variable declaration
71 7 this is a variable declaration
72 8 this is a variable declaration
73 7 this is a assign statement
74 7 this is a assign statement
75 7 this is a assign statement
76 9 this is a assign statement
77 31 this is a printf statement
79 17 this is a printf statement
80 3 this is an if statement
81 16 this is a printf statement
82 3 this is an if statement
83 16 this is a printf statement
84 3 this is an if statement
85 14 this is a printf statement
86 3 this is an if statement
87 20 this is a printf statement
88 3 this is an if statement
89 18 this is a printf statement
90 3 this is an if statement
91 17 this is a printf statement
92 3 this is an if statement
93 19 this is a printf statement
94 3 this is an if statement
95 19 this is a printf statement
96 7 this is an if statement
96 8 this is a return statement
99 4 this is a function definition
100 28 this is a const declaration
101 16 this is a variable declaration
102 19 this is a printf statement
103 18 this is a assign statement
104 20 this is a printf statement
107 4 this is a function definition
108 26 this is a variable declaration
109 12 this is a assign statement
110 31 this is a printf statement
111 52 this is a assign statement
112 62 this is a printf statement
113 21 this is a assign statement
114 31 this is a printf statement
115 21 this is a assign statement
116 31 this is a printf statement
117 31 this is a assign statement
118 41 this is a printf statement
119 24 this is a assign statement
120 34 this is a printf statement
121 24 this is a assign statement
122 31 this is a printf statement
123 30 this is a assign statement
124 37 this is a printf statement
125 33 this is a assign statement
126 43 this is a printf statement
127 16 this is a assign statement
128 13 this is a assign statement
129 18 this is a assign statement
130 64 this is a assign statement
131 72 this is a printf statement
132 8 this is a return statement
135 4 this is a function definition
136 10 this is a variable declaration
137 10 this is a scanf statement
138 11 this is a printf statement
139 13 this is a scanf statement
140 11 this is a printf statement
141 11 this is a printf statement
142 8 this is a return statement
145 4 this is a function definition
146 11 this is a printf statement
147 11 this is a return statement
150 4 this is a function definition
151 4 this is a function definition
151 21 this is a null statement
152 4 this is a function definition
152 21 this is a null statement
152 22 this is a null statement
152 23 this is a null statement
152 24 this is a null statement
152 25 this is a null statement
152 26 this is a null statement
152 27 this is a null statement
152 28 this is a null statement
152 29 this is a null statement
152 30 this is a null statement
152 31 this is a null statement
152 32 this is a null statement
152 33 this is a null statement
153 4 this is a function definition
154 17 this is a printf statement
157 4 this is a function definition
158 7 this is a variable declaration
159 8 this is a variable declaration
160 8 this is a variable declaration
162 22 this is a function call statement
164 14 this is a assign statement
165 19 this is a assign statement
166 14 this is a assign statement
167 23 this is a function call statement
168 14 this is a assign statement
169 19 this is a assign statement
170 14 this is a assign statement
172 2 this is a for statement
174 8 this is a assign statement
176 25 this is a assign statement
178 20 this is a printf statement
179 4 this is an if statement
179 13 this is a assign statement
180 13 this is a do-while statement
181 14 this is a printf statement
183 1 this is an if statement
185 4 this is a function definition
186 20 this is a const declaration
187 13 this is a variable declaration
188 7 this is a variable declaration
189 30 this is a variable declaration
190 17 this is a variable declaration
193 20 this is a assign statement
194 7 this is a for statement
194 50 this is a printf statement
195 33 this is a scanf statement
196 17 this is a assign statement
198 22 this is a printf statement
199 12 this is a assign statement
200 23 this is a do-while statement
203 22 this is a printf statement
206 7 this is a for statement
206 16 this is a printf statement
207 22 this is a printf statement
208 20 this is a printf statement
209 27 this is a printf statement
210 21 this is a printf statement
211 20 this is a printf statement
212 19 this is a printf statement
213 19 this is a function call statement
214 20 this is a function call statement
215 13 this is a function call statement
216 17 this is a function call statement
217 14 this is a function call statement
218 16 this is a function call statement
219 9 this is a function call statement
220 15 this is a function call statement
221 16 this is a function call statement
222 16 this is a function call statement
223 14 this is a assign statement
224 14 this is a assign statement
225 14 this is a assign statement
226 14 this is a assign statement
227 14 this is a assign statement
228 18 this is a function call statement
229 8 this is a return statement
230 1 this is a main function definition
230 1 this is a program
CONST INT g_c_int1 1
CONST CHAR g_c_charf 'f'
CONST CHAR g_c_chara 'a'
CONST CHAR _0b 'b'
CONST INT _c_int2 2
CONST INT _g_10 3
INT G_v_int_a1
INT g_V_INT10_arr1[15]
INT tag[20]
CHAR g_v_char_h
INT g_v_int_arr2[10]
INT g_v_int_b
CHAR g_v_char_b
CHAR g_v_char_arr[50]
CHAR chs[5]
GOTO main
FUNC foo1
#0 = 0 - 1
RET #0
FUNC foo2
PARA a
PARA b
#0 = a + b
RET #0
FUNC add
PARA a
PARA b
#0 = a + b
RET #0
FUNC addchar
PARA a
PARA b
#0 = a + b
RET #0
FUNC addone
PARA a
#0 = a + 1
RET #0
FUNC addint
PARA a
#0 = a + 1
RET #0
FUNC foo3
PARA c
#0 = c > 'c'
BNZ #0 #LABEL0
RET '/'
GOTO #LABEL1
SET #LABEL0
RET '*'
SET #LABEL1
FUNC test_string_int
INT a
a = 1
OUTV a
a = 0
OUTV a
#0 = 0 + 0
a = #0
OUTV a
#1 = 0 - 0
a = #1
OUTV a
#2 = 0 + 12
a = #2
OUTV a
#3 = 0 - 12
a = #3
OUTV a
OUTS #$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~ !
RET #
FUNC fib
PARA n
#0 = n == 1
BNZ #0 #LABEL2
RET 1
GOTO #LABEL3
SET #LABEL2
SET #LABEL3
#1 = n == 2
BNZ #1 #LABEL4
RET 1
GOTO #LABEL5
SET #LABEL4
SET #LABEL5
#2 = n - 1
PUSH #2
CALL fib
#3 = n - 2
PUSH #3
CALL fib
#4 = #RET + #RET
RET #4
FUNC test_all_cond
INT a
INT b
INT c
CHAR d
a = 1
b = 2
c = 2
d = 'A'
OUTS test of comp symbol
#0 = b == c
BNZ #0 #LABEL6
OUTS a==b
GOTO #LABEL7
SET #LABEL6
SET #LABEL7
#1 = a < b
BNZ #1 #LABEL8
OUTS a<b
GOTO #LABEL9
SET #LABEL8
SET #LABEL9
#2 = c > a
BNZ #2 #LABEL10
OUTS c>a
GOTO #LABEL11
SET #LABEL10
SET #LABEL11
#3 = d != 0
BNZ #3 #LABEL12
OUTS d
GOTO #LABEL13
SET #LABEL12
SET #LABEL13
#4 = a == 1
BNZ #4 #LABEL14
OUTS error!!
GOTO #LABEL15
SET #LABEL14
SET #LABEL15
#5 = a != 1
BNZ #5 #LABEL16
OUTS error
GOTO #LABEL17
SET #LABEL16
SET #LABEL17
#6 = a <= c
BNZ #6 #LABEL18
OUTS a<=c
GOTO #LABEL19
SET #LABEL18
SET #LABEL19
#7 = a >= c
BNZ #7 #LABEL20
OUTS error!
GOTO #LABEL21
SET #LABEL20
SET #LABEL21
#8 = d > 66
BNZ #8 #LABEL22
OUTS error!
GOTO #LABEL23
SET #LABEL22
SET #LABEL23
RET #
FUNC test_diff_domain
CONST CHAR g_c_chara 'b'
INT G_v_int_a1
OUTC g_c_chara
G_v_int_a1 = 222
OUTV G_v_int_a1
FUNC test_expr
INT res_of_expr
arr[1] = 1
OUTS test for expression
#0 = 0 - -12
#1 = #0 - -12
#2 = #1 - -12
#3 = #2 - 12
#4 = #3 + -12
#5 = #4 - -12
#6 = #5 - -12
#7 = #6 - -12
#8 = #7 - -12
res_of_expr = #8
OUTS --12--12--12-+12+-12--12--12--12--12=
OUTV res_of_expr
#9 = 10 * -5
res_of_expr = #9
OUTS 10*-5=
OUTV res_of_expr
#10 = 10 / 4
res_of_expr = #10
OUTS 10/+4=
OUTV res_of_expr
PUSH 12
CALL fib
PUSH 14
CALL fib
#11 = #RET - #RET
res_of_expr = #11
OUTS fib(12)-fib(14)=
OUTV res_of_expr
#12 = 'c' + 12
res_of_expr = #12
OUTS c + 12 = 
OUTV res_of_expr
#13 = 'c' * 12
#14 = #13 / 1
res_of_expr = #14
OUTS c*12/1
OUTV res_of_expr
#15 = 12 + 1
#16 = 1 - #15
res_of_expr = #16
OUTS 1-(((12+1)))
OUTV res_of_expr
#17 = arr[1]
#18 = #17 * 'b'
PUSH 3
CALL fib
#19 = #18 + #RET
res_of_expr = #19
OUTS arr[1]*'b'+fib(3)=
OUTV res_of_expr
G_v_int_a1 = 5
tag[6] = 12
g_v_char_h = 'h'
PUSH 'h'
CALL addone
PUSH 5
CALL fib
PUSH 1
PUSH #RET
CALL add
#20 = #RET / G_v_int_a1
#21 = #RET + #20
#22 = tag[6]
#23 = #21 - #22
res_of_expr = #23
OUTS addone('h')+add(1, fib(5))/G_v_int_a1 - tag[6]=
OUTV res_of_expr
RET #
FUNC test_scanf
INT a
INT b
IN a
OUTV a
IN a
IN b
OUTV a
OUTV b
RET #
FUNC echo_char
PARA a
OUTC a
RET a
FUNC really_void
FUNC really_void2
FUNC really_void3
FUNC echo
PARA a
OUTS a=
OUTV a
FUNC permutation
PARA m
PARA n
INT i
CHAR t
CHAR r
#0 = n - 1
#1 = m < #0
BNZ #1 #LABEL24
#2 = m + 1
PUSH #2
PUSH n
CALL permutation
#3 = m + 1
i = #3
SET #LABEL26
#4 = i < n
BNZ #4 #LABEL27
#5 = chs[m]
t = #5
#6 = chs[i]
chs[m] = #6
chs[i] = t
#7 = m + 1
PUSH #7
PUSH n
CALL permutation
#8 = chs[m]
t = #8
#9 = chs[i]
chs[m] = #9
chs[i] = t
i = i + 1
GOTO #LABEL26
SET #LABEL27
GOTO #LABEL25
SET #LABEL24
i = 0
SET #LABEL28
#10 = chs[i]
PUSH #10
CALL echo_char
r = #RET
#11 = chs[i]
#12 = r != #11
BNZ #12 #LABEL29
OUTS error
GOTO #LABEL30
SET #LABEL29
SET #LABEL30
#13 = i + 1
i = #13
#14 = i < 5
BEZ #14 #LABEL28
OUTS  
SET #LABEL25
FUNC main
CONST INT len 10
INT i
INT user_input1
INT user_input2
INT res_of_expr
i = 0
SET #LABEL31
#15 = i < len
BNZ #15 #LABEL32
#16 = i + 1
PUSH #16
CALL fib
arr[i] = #RET
i = i + 1
GOTO #LABEL31
SET #LABEL32
OUTS input the number of fib you want(1~10)
IN user_input1
IN user_input2
i = user_input1
SET #LABEL33
OUTS  
#17 = arr[i]
OUTV #17
#18 = i + 1
i = #18
#19 = i <= user_input2
BEZ #19 #LABEL33
i = user_input2
SET #LABEL34
#20 = i >= user_input1
BNZ #20 #LABEL35
OUTS  
#21 = arr[i]
OUTV #21
i = i - 1
GOTO #LABEL34
SET #LABEL35
CALL foo1
OUTV #RET
PUSH 1
PUSH 'b'
CALL foo2
OUTV #RET
#22 = 0 + 2
PUSH 1
PUSH #22
CALL add
OUTV #RET
PUSH 'a'
PUSH 'b'
CALL addchar
OUTV #RET
PUSH 'F'
CALL addone
OUTV #RET
PUSH 16
CALL addint
OUTV #RET
PUSH 'c'
CALL foo3
OUTC #RET
CALL test_string_int
CALL test_diff_domain
CALL test_expr
CALL test_all_cond
CALL test_scanf
PUSH 'a'
CALL echo_char
PUSH 5
CALL echo
CALL really_void
CALL really_void2
CALL really_void3
chs[0] = 'A'
chs[1] = 'B'
chs[2] = 'C'
chs[3] = 'D'
chs[4] = 'E'
PUSH 0
PUSH 5
CALL permutation
RET #
EXIT
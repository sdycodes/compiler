.data   
$string: .asciiz "global g_int1 = \0\0local g_int1 = \0\0please enter two numbers between 1-10 and two characters:\0\0sum array : \0\0fib ans\0\0is a2 equal to 63:\0\0" 
.text   
li $fp 0x7fffeffc 
addi $sp $fp -192
j main  
FUNC_intaddchar:   
lw $s0 0($fp)
lw $s1 -4($fp)
add $v0 $s0 $s1
jr $ra  
li $v0 0 
jr $ra  
FUNC_intaddint:   
lw $s0 0($fp)
lw $s1 -4($fp)
add $v0 $s0 $s1
jr $ra  
li $v0 0 
jr $ra  
FUNC_charaddchar:   
lw $s0 0($fp)
lw $s1 -4($fp)
add $v0 $s0 $s1
jr $ra  
li $v0 0 
jr $ra  
FUNC_echochar:   
lw $s6 72($gp)
li $s6 97 
sw $s6 72($gp)
lw $s7 72($gp)
sw $s7 76($gp)
li $t9 65 
sw $t9 80($gp)
lw $t4 76($gp)
li $v0 11 
move $a0 $t4 
syscall   
li $v0 0 
jr $ra  
FUNC_sum:   
lw $s0 0($fp)
li $s2 0 
addi $t3 $s0 -1
move $s1 $t3 
$LABEL0:   
li $t8 0 
blt $s1 $t8 $LABEL1
mult $s1 $s1 
mflo $t3  
sll $t8 $s1 2
addi $t8 $t8 28
add $t8 $gp $t8
sw $t3 0($t8)
addi $t2 $s1 -1
move $s1 $t2 
j $LABEL0  
$LABEL1:   
$LABEL2:   
sll $t8 $s1 2
addi $t8 $t8 28
add $t8 $gp $t8
lw $t3 0($t8)
add $t2 $s2 $t3
move $s2 $t2 
addi $t3 $s1 1
move $s1 $t3 
blt $s1 $s0 $LABEL2
move $v0 $s2 
jr $ra  
li $v0 0 
jr $ra  
FUNC_test_all_cond:   
li $s0 1 
li $s1 2 
li $s2 2 
li $s3 65 
li $s4 0 
bne $s1 $s2 $LABEL3
addi $t3 $s4 1
move $s4 $t3 
j $LABEL4  
$LABEL3:   
$LABEL4:   
bge $s0 $s1 $LABEL5
addi $t3 $s4 2
move $s4 $t3 
j $LABEL6  
$LABEL5:   
$LABEL6:   
ble $s2 $s0 $LABEL7
addi $t3 $s4 4
move $s4 $t3 
j $LABEL8  
$LABEL7:   
$LABEL8:   
li $t8 0 
bne $s3 $t8 $LABEL9
addi $t3 $s4 64
move $s4 $t3 
j $LABEL10  
$LABEL9:   
$LABEL10:   
li $t8 1 
bne $s0 $t8 $LABEL11
addi $t3 $s4 8
move $s4 $t3 
j $LABEL12  
$LABEL11:   
$LABEL12:   
li $t8 1 
beq $s0 $t8 $LABEL13
addi $t3 $s4 128
move $s4 $t3 
j $LABEL14  
$LABEL13:   
$LABEL14:   
bgt $s0 $s2 $LABEL15
addi $t3 $s4 16
move $s4 $t3 
j $LABEL16  
$LABEL15:   
$LABEL16:   
blt $s1 $s0 $LABEL17
addi $t3 $s4 32
move $s4 $t3 
j $LABEL18  
$LABEL17:   
$LABEL18:   
li $t8 66 
ble $s3 $t8 $LABEL19
addi $t3 $s4 256
move $s4 $t3 
j $LABEL20  
$LABEL19:   
$LABEL20:   
move $v0 $s4 
jr $ra  
li $v0 0 
jr $ra  
FUNC_fib:   
lw $s0 0($fp)
li $t8 1 
bne $s0 $t8 $LABEL21
li $v0 1 
jr $ra  
j $LABEL22  
$LABEL21:   
li $t8 2 
bne $s0 $t8 $LABEL23
li $v0 1 
jr $ra  
j $LABEL24  
$LABEL23:   
$LABEL24:   
$LABEL22:   
addi $t3 $s0 -1
sw $t3 0($sp)
sw $11 -48($sp)
sw $s0 -68($sp)
sw $31 -128($sp)
move $fp $sp 
addi $sp $fp -160
jal FUNC_fib  
lw $11 -48($fp)
lw $s0 -68($fp)
lw $31 -128($fp)
move $sp $fp 
addi $fp $sp 160
move $t2 $v0 
addi $t1 $s0 -2
sw $t1 0($sp)
sw $9 -40($sp)
sw $10 -44($sp)
sw $11 -48($sp)
sw $s0 -68($sp)
sw $31 -128($sp)
move $fp $sp 
addi $sp $fp -160
jal FUNC_fib  
lw $9 -40($fp)
lw $10 -44($fp)
lw $11 -48($fp)
lw $s0 -68($fp)
lw $31 -128($fp)
move $sp $fp 
addi $fp $sp 160
move $t0 $v0 
add $v0 $t2 $t0
jr $ra  
li $v0 0 
jr $ra  
FUNC_global:   
li $t6 8 
addi $t5 $t6 0
li $t4 0 
add $t3 $t5 $t4
li $t1 6 
li $t8 -12 
div $t2 $t8 $t1
sub $t0 $t3 $t2
lw $s6 24($gp)
move $s6 $t0 
sw $s6 24($gp)
li $v0 4 
li $a0 268500992 
syscall   
li $v0 1 
lw $s7 24($gp)
move $a0 $s7 
syscall   
jr $ra  
FUNC_test_expression:   
sw $31 -128($sp)
move $fp $sp 
addi $sp $fp -160
jal FUNC_global  
lw $31 -128($fp)
move $sp $fp 
addi $fp $sp 136
lw $s6 24($gp)
li $s6 2 
sw $s6 24($gp)
lw $s7 24($gp)
addi $t6 $s7 1
lw $s6 24($gp)
move $s6 $t6 
sw $s6 24($gp)
li $v0 4 
li $a0 268501010 
syscall   
li $v0 1 
lw $s7 24($gp)
move $a0 $s7 
syscall   
jr $ra  
FUNC_really_void:   
jr $ra  
main:   
li $t6 0 
li $v0 4 
li $a0 268501027 
syscall   
li $v0 5 
syscall   
move $t5 $v0 
li $v0 5 
syscall   
move $t4 $v0 
li $v0 12 
syscall   
move $t3 $v0 
li $v0 12 
syscall   
move $t2 $v0 
sw $t5 0($sp)
sw $t4 -4($sp)
sw $10 -48($sp)
sw $11 -52($sp)
sw $12 -56($sp)
sw $13 -60($sp)
sw $14 -64($sp)
sw $31 -132($sp)
move $fp $sp 
addi $sp $fp -140
jal FUNC_intaddint  
lw $10 -48($fp)
lw $11 -52($fp)
lw $12 -56($fp)
lw $13 -60($fp)
lw $14 -64($fp)
lw $31 -132($fp)
move $sp $fp 
addi $fp $sp 192
move $t1 $v0 
sw $t5 0($sp)
sw $t3 -4($sp)
sw $9 -44($sp)
sw $10 -48($sp)
sw $11 -52($sp)
sw $12 -56($sp)
sw $13 -60($sp)
sw $14 -64($sp)
sw $31 -132($sp)
move $fp $sp 
addi $sp $fp -140
jal FUNC_intaddchar  
lw $9 -44($fp)
lw $10 -48($fp)
lw $11 -52($fp)
lw $12 -56($fp)
lw $13 -60($fp)
lw $14 -64($fp)
lw $31 -132($fp)
move $sp $fp 
addi $fp $sp 192
move $t0 $v0 
add $t7 $t1 $t0
sw $t3 0($sp)
sw $t2 -4($sp)
sw $8 -40($sp)
sw $9 -44($sp)
sw $10 -48($sp)
sw $11 -52($sp)
sw $12 -56($sp)
sw $13 -60($sp)
sw $14 -64($sp)
sw $15 -68($sp)
sw $31 -132($sp)
move $fp $sp 
addi $sp $fp -140
jal FUNC_charaddchar  
lw $8 -40($fp)
lw $9 -44($fp)
lw $10 -48($fp)
lw $11 -52($fp)
lw $12 -56($fp)
lw $13 -60($fp)
lw $14 -64($fp)
lw $15 -68($fp)
lw $31 -132($fp)
move $sp $fp 
addi $fp $sp 192
sw $t6 -20($fp)
move $t6 $v0 
sw $t4 -8($fp)
add $t4 $t7 $t6
sw $t5 -4($fp)
move $t5 $t4 
li $v0 1 
move $a0 $t5 
syscall   
li $v0 4 
li $a0 268501086 
syscall   
li $t8 10 
sw $t8 0($sp)
sw $10 -52($sp)
sw $11 -56($sp)
sw $13 -64($sp)
sw $31 -136($sp)
move $fp $sp 
addi $sp $fp -172
jal FUNC_sum  
lw $10 -52($fp)
lw $11 -56($fp)
lw $13 -64($fp)
lw $31 -136($fp)
move $sp $fp 
addi $fp $sp 192
move $t7 $v0 
li $v0 1 
move $a0 $t7 
syscall   
lw $t6 -4($fp)
sw $t6 0($sp)
sw $10 -44($sp)
sw $11 -48($sp)
sw $13 -56($sp)
sw $14 -60($sp)
sw $15 -64($sp)
sw $31 -128($sp)
move $fp $sp 
addi $sp $fp -160
jal FUNC_fib  
lw $10 -44($fp)
lw $11 -48($fp)
lw $13 -56($fp)
lw $14 -60($fp)
lw $15 -64($fp)
lw $31 -128($fp)
move $sp $fp 
addi $fp $sp 192
move $t4 $v0 
lw $t1 -8($fp)
sw $t1 0($sp)
sw $9 -40($sp)
sw $10 -44($sp)
sw $11 -48($sp)
sw $12 -52($sp)
sw $13 -56($sp)
sw $14 -60($sp)
sw $15 -64($sp)
sw $31 -128($sp)
move $fp $sp 
addi $sp $fp -160
jal FUNC_fib  
lw $9 -40($fp)
lw $10 -44($fp)
lw $11 -48($fp)
lw $12 -52($fp)
lw $13 -56($fp)
lw $14 -60($fp)
lw $15 -64($fp)
lw $31 -128($fp)
move $sp $fp 
addi $fp $sp 192
move $t0 $v0 
sw $t3 -12($fp)
add $t3 $t4 $t0
move $t6 $t3 
li $v0 4 
li $a0 268501100 
syscall   
li $v0 1 
move $a0 $t6 
syscall   
sw $9 -56($sp)
sw $10 -60($sp)
sw $13 -72($sp)
sw $14 -76($sp)
sw $31 -144($sp)
move $fp $sp 
addi $sp $fp -220
jal FUNC_test_all_cond  
lw $9 -56($fp)
lw $10 -60($fp)
lw $13 -72($fp)
lw $14 -76($fp)
lw $31 -144($fp)
move $sp $fp 
addi $fp $sp 192
move $t7 $v0 
move $t1 $t7 
li $v0 4 
li $a0 268501109 
syscall   
li $v0 1 
move $a0 $t1 
syscall   
sw $9 -40($sp)
sw $10 -44($sp)
sw $13 -56($sp)
sw $14 -60($sp)
sw $31 -128($sp)
move $fp $sp 
addi $sp $fp -136
jal FUNC_test_expression  
lw $9 -40($fp)
lw $10 -44($fp)
lw $13 -56($fp)
lw $14 -60($fp)
lw $31 -128($fp)
move $sp $fp 
addi $fp $sp 192
sw $9 -36($sp)
sw $10 -40($sp)
sw $13 -52($sp)
sw $14 -56($sp)
sw $31 -124($sp)
move $fp $sp 
addi $sp $fp -132
jal FUNC_echochar  
lw $9 -36($fp)
lw $10 -40($fp)
lw $13 -52($fp)
lw $14 -56($fp)
lw $31 -124($fp)
move $sp $fp 
addi $fp $sp 192
sw $9 -36($sp)
sw $10 -40($sp)
sw $13 -52($sp)
sw $14 -56($sp)
sw $31 -124($sp)
move $fp $sp 
addi $sp $fp -128
jal FUNC_really_void  
lw $9 -36($fp)
lw $10 -40($fp)
lw $13 -52($fp)
lw $14 -56($fp)
lw $31 -124($fp)
move $sp $fp 
addi $fp $sp 192
li $v0 10 
syscall   
